---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-pvc
  namespace: prom-system
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: default
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
  namespace: prom-system
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: default
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: prom-system
spec:
  selector:
    matchLabels:
      app: prometheus
  replicas: 1
  revisionHistoryLimit: 3
  template:
    metadata:
      labels:
        app: prometheus
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9090'
        prometheus.io/path: /metrics
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus:v2.3.2
          ports:
            - protocol: TCP
              containerPort: 9090
          args: ["--config.file=/etc/prometheus/prometheus.yml", "--storage.tsdb.path=/prometheus-data", "--storage.tsdb.no-lockfile"]
          securityContext:
            runAsUser: 0
          volumeMounts:
            - name: prometheus-config
              mountPath: /etc/prometheus
            - name: prometheus-persistent-storage
              mountPath: /prometheus-data
          livenessProbe:
            httpGet:
              port: 9090
              path: /-/healthy
          readinessProbe:
            httpGet:
              port: 9090
              path: /-/ready
        - name: grafana
          image: grafana/grafana:5.2.2
          env:
            - name: GF_AUTH_BASIC_ENABLED
              value: 'true'
            - name: GF_AUTH_ANONYMOUS_ENABLED
              value: 'false'
          securityContext:
            runAsUser: 0
          volumeMounts:
            - name: grafana-persistent-storage
              mountPath: /var/lib/grafana
      volumes:
        - name: prometheus-config
          configMap:
            name: prometheus
        - name: prometheus-persistent-storage
          persistentVolumeClaim:
            claimName: prometheus-pvc
        - name: grafana-persistent-storage
          persistentVolumeClaim:
            claimName: grafana-pvc
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: prometheus
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: prometheus
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: prom-system
spec:
  ports:
    - name: prometheus
      port: 9090
      targetPort: 9090
    - name: grafana
      port: 3000
      targetPort: 3000
  selector:
    app: prometheus
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: grafana
  namespace: prom-system
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
    - host: grafana.web-apps.tech
      http:
        paths:
          - path: /
            backend:
              serviceName: prometheus
              servicePort: 3000
