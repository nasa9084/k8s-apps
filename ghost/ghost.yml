---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ghost-pvc
  namespace: ghost
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: ceph
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ghost
  namespace: ghost
spec:
  selector:
    matchLabels:
      app: ghost
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: ghost
    spec:
      containers:
        - name: ghost
          image: ghost:3.12.1
          ports:
            - protocol: TCP
              containerPort: 2368
          volumeMounts:
            - name: ghost-config
              mountPath: /var/lib/ghost/config.production.json
              subPath: config.production.json
            - name: ghost-persistent-storage
              mountPath: /var/lib/ghost/content
              subPath: content
      initContainers:
        - name: init-ghost-config
          image: nasa9084/confd:v0.16.0
          args: [ "-onetime", "-backend", "env" ]
          volumeMounts:
            - name: ghost-config-template
              mountPath: /etc/confd/templates
            - name: ghost-confd-config
              mountPath: /etc/confd/conf.d
            - name: ghost-config
              mountPath: /var/lib/ghost
          env:
            - name: GHOST_MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ghost
                  key: mysql-password
      volumes:
        - name: ghost-config-template
          configMap:
            name: ghost-config-template
        - name: ghost-confd-config
          configMap:
            name: ghost-confd-config
        - name: ghost-config
          emptyDir: {}
        - name: ghost-persistent-storage
          persistentVolumeClaim:
            claimName: ghost-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: ghost
  namespace: ghost
spec:
  ports:
    - port: 2368
      targetPort: 2368
  selector:
    app: ghost
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ghost
  namespace: ghost
  annotations:
    cert-manager.io/cluster-issuer: web-apps.tech
    nginx.ingress.kubernetes.io/proxy-body-size: 5m
spec:
  tls:
    - hosts:
        - blog.web-apps.tech
      secretName: blog.web-apps.tech-ingress-cert
  rules:
    - host: blog.web-apps.tech
      http:
        paths:
          - path: /
            backend:
              serviceName: ghost
              servicePort: 2368
